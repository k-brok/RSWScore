@inject IEditionRepository EditionRepository

@if (ErrorMessages.Any()){
    <RadzenCard>
        <RadzenStack Orientation="Orientation.Vertical">
            @foreach (string message in ErrorMessages)
            {
                <RadzenAlert AllowClose="false" AlertStyle="AlertStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter">
                    @message
                </RadzenAlert>
            }
        </RadzenStack>
    </RadzenCard>
}
else{
    <RadzenDataGrid @ref="EditionGridRef" TItem="Edition" Data="Editions">
        <Columns>
            <RadzenDataGridColumn Title="RSW Start Datum" Property="@nameof(Edition.RSWStartDate)">
                <EditTemplate Context="edition">
                    <RadzenDatePicker @bind-Value="edition.RSWStartDate" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Title="LSW Start Datum" Property="@nameof(Edition.LSWStartDate)">
                <EditTemplate Context="edition">
                    <RadzenDatePicker @bind-Value="edition.LSWStartDate" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Title="Thema" Property="@nameof(Edition.Theme)">
                <EditTemplate Context="edition">
                    <RadzenTextBox @bind-Value="edition.Theme" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Context="edition" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Frozen="true" FrozenPosition="FrozenColumnPosition.Right">
                <Template Context="edition">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@((args) => EditEdition(edition))" />
                </Template>
                <EditTemplate Context="edition">
                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveEdition(edition))" aria-label="Save" />
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@((args) => CancelEditEdition(edition))" aria-label="Cancel" />
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Size="ButtonSize.Medium" Shade="Shade.Lighter" class="rz-my-1 rz-ms-1" Click="@(args => DeleteEdition(edition))" aria-label="Delete" />
                </EditTemplate>
                <HeaderTemplate>
                    <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle" Click="@(() => AddEdition())" />
                </HeaderTemplate>
            </RadzenDataGridColumn>
        </Columns>
        <Template Context="edition">
            @if (edition.SubGroups.Any()){
                <SubGroupGrid edition="edition" />
            }
        </Template>
    </RadzenDataGrid>
}

@code {
    [Parameter] public List<Edition> Editions { get; set; } = null;

    private RadzenDataGrid<Edition> EditionGridRef { get; set; }

    private List<string> ErrorMessages { get; set; } = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        Editions = await EditionRepository.GetAllAsync();
        await base.OnInitializedAsync();
    }
    private async Task EditEdition(Edition edition){
        await EditionGridRef.EditRow(edition);
    }
    private async Task SaveEdition(Edition edition)
    {
        await EditionRepository.Save(edition);
        _Current.Edition = await EditionRepository.GetActive();
        await EditionGridRef.UpdateRow(edition);
    }
    private async Task CancelEditEdition(Edition edition)
    {
        await EditionRepository.RevertEdits(edition);
        EditionGridRef.CancelEditRow(edition);
    }
    private async Task DeleteEdition(Edition edition)
    {
        await EditionRepository.Delete(edition);
        await EditionGridRef.Reload();
    }
    private async Task AddEdition()
    {
        Edition NewEdition = new Edition();
        await EditionGridRef.InsertRow(NewEdition);
    }
}
